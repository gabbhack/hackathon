# AUTOGENERATED FROM 'app/queries/get_tasks.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetTasksResult(NoPydanticValidation):
    name: str
    predicted_end_date: datetime.datetime | None
    actual_end_date: datetime.datetime | None
    code: str
    id: uuid.UUID
    created: datetime.datetime | None
    modified: datetime.datetime | None


async def get_tasks(
    executor: edgedb.AsyncIOExecutor,
    *,
    subject_id: uuid.UUID,
) -> list[GetTasksResult]:
    return await executor.query(
        """\
        select Task{*} filter .subject.id = <uuid>$subject_id\
        """,
        subject_id=subject_id,
    )
